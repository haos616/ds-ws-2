version: '2'
volumes:
  postgres_data: {}
  redis_data: {}
services:
  django:
    image: ${HUB_HOST}/${COMPOSE_PROJECT_NAME}/django:${PROJECT_VERSION}
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - API_MIGRATE=True
      - API_DATABASE_URL=psql://api:api@postgres:5432/api_db
      - API_WAIT=True
      - API_CELERY_BROKER_URL=redis://redis:6379/1
      - API_CELERY_RESULT_BACKEND=redis://redis:6379/1
    build:
      context: ..
      dockerfile: ./docker/images/django/Dockerfile
    volumes:
      - '../api:/code'
    ports:
      - '127.0.0.1:8000:8000'
    depends_on:
      - postgres
      - redis
      - mailhog
  celery_worker:
    image: ${HUB_HOST}/${COMPOSE_PROJECT_NAME}/django:${PROJECT_VERSION}
    command: celery worker -A ws2.celery_app -l debug
    environment:
      - API_DATABASE_URL=psql://api:api@postgres:5432/api_db
      - API_WAIT=True
      - API_CELERY_BROKER_URL=redis://redis:6379/1
      - API_CELERY_RESULT_BACKEND=redis://redis:6379/1
      - CELERY_RDB_HOST=0.0.0.0
    ports:
      - '127.0.0.1:6899-6910:6899-6910'
    volumes:
      - '../api:/code'
    depends_on:
      - postgres
      - redis
  postgres:
    image: ${HUB_HOST}/${COMPOSE_PROJECT_NAME}/postgres:${PROJECT_VERSION}
    build: ./images/postgres
    environment:
      - POSTGRES_DB=api_db
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:3.2.8
    volumes:
      - redis_data:/data
  mailhog:
    image: mailhog/mailhog
    ports:
      - "127.0.0.1:8025:8025"
  nginx:
    image: ${HUB_HOST}/${COMPOSE_PROJECT_NAME}/nginx:${PROJECT_VERSION}
    build: ./images/nginx
    environment:
      - API_DEV=True
    ports:
      - '127.0.0.1:80:80'
    depends_on:
      - django
